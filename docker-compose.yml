version: "3.9"

networks:
  webproxy:
    external: true   # создай заранее: docker network create webproxy

services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/nginx/certs
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - webproxy

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    environment:
      NGINX_PROXY_CONTAINER: nginx-proxy
    volumes:
      - /etc/nginx/certs
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - webproxy

  backend:
    image: evrirus/nftex_backend:latest
    container_name: backend
    environment:
      - POSTGRES_DB=dbname
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=dbpassword
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - VIRTUAL_HOST=richmachine.ru
      - LETSENCRYPT_HOST=richmachine.ru
      - LETSENCRYPT_EMAIL=orion4605@gmail.com
    networks:
      - webproxy
    expose:
      - "8000"
    depends_on:
      - db

  frontend:
    image: evrirus/nftex_frontend:latest
    container_name: frontend
    environment:
      - VIRTUAL_HOST=richmachine.ru
      - LETSENCRYPT_HOST=richmachine.ru
      - LETSENCRYPT_EMAIL=orion4605@gmail.com
    networks:
      - webproxy
    expose:
      - "80"
    depends_on:
      - backend

  db:
    image: postgres:17
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpassword
      POSTGRES_DB: dbname
    volumes:
      - db_data:/var/lib/postgresql/data
    expose:
      - "5432"

volumes:
  db_data:
